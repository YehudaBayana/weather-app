{"version":3,"sources":["redux/actions/index.js","components/features/searchInput/SearchInput.js","components/features/mainHeader/MainHeader.js","components/features/weeklyWeather/WeeklyWeather.js","components/features/weatherInfo/WeatherInfo.js","components/pages/HomePage.js","components/pages/favoritesPage/FavoritesPage.js","components/features/Hamburger/Hamburger.js","components/features/navbar/Navbar.js","components/features/scrollToTop/ScrollToTop.js","components/appRouter/AppRouter.js","customHooks/useAutoComplete.js","customHooks/useCurrWeather.js","customHooks/useWeekWeather.js","components/getWeather/GetWeather.js","components/pages/errorPage/ErrorPage.js","App.js","redux/reducers/favoritesReducer.js","redux/reducers/currentCityReducer.js","redux/reducers/autoCompleteReducer.js","redux/reducers/currentWeatherReducer.js","redux/reducers/weeklyWeatherReducer.js","redux/reducers/allWeatherReducer.js","redux/reducers/isCReducer.js","redux/reducers/cityNameReducer.js","redux/reducers/apiErrorReducer.js","redux/reducers/index.js","index.js"],"names":["ADD_TO_FAVORITES","DELETE_FROM_FAVORITES","SET_CITY_NAME","SET_CURRENT_CITY","SET_AUTO_COMPLETE","SET_CURRENT_WEATHER","SET_ALL_WEATHER","DELETE_ALL_WEATHER","SET_WEEKLY_WEATHER","SET_IS_C","SET_API_ERROR","deleteFromFavorites","key","type","payload","setCurrentCity","item","setAutoComplete","items","setAllWeather","setIsC","setApiError","connect","state","currentCity","cityName","autoComplete","dispatch","city","setCityName","bool","props","Search","Input","inputRef","useRef","className","direction","placeholder","allowClear","onSearch","value","style","width","ref","size","enterButton","map","onClick","onUserChoice","LocalizedName","Key","favorites","currentWeather","weeklyWeather","isC","addToList","deleteFromList","status","listFavorites","setInFavorites","useState","useEffect","find","Math","floor","Temperature","Metric","Value","Unit","Imperial","WeatherText","Wind","Speed","inFavorites","fontSize","marginTop","padding","shape","icon","HeartFilled","color","display","flexWrap","DailyForecasts","day","i","average","Minimum","Maximum","Date","toDateString","WeatherInfo","theme","HomePage","allWeather","weather","deleteAllWeather","forEach","fetch","then","res","json","data","catch","length","to","setTheme","closeNav","document","getElementById","height","id","href","target","rel","src","alt","old","backgroundColor","cursor","pathname","useLocation","window","innerWidth","setSize","setForReRender","forReRenderFunc","oldValue","checkSize","addEventListener","ghost","title","subTitle","extra","location","indexOf","ScrollToTop","scrollTo","AppRouter","path","exact","useAutoComplete","err","console","log","useCurrWeather","cityKey","setCurrWeather","useWeekWeather","setWeekData","setCurrentWeather","setWeeklyWeather","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","Version","Type","Rank","getUserLocation","ErrorPage","viewBox","xmlns","d","apiError","favoritesInitialState","favoritesReducer","action","alreadyIn","indexCity","findIndex","splice","currentCityInitialState","currentCityReducer","autoCompleteInitialState","currentWeatherInitialState","weeklyWeatherInitialState","allWeatherInitialState","allWeatherReducer","isCInitialState","isCReducer","cityNameReducer","apiErrorInitialState","apiErrorReducer","initialState","combineReducers","autoCompleteReducer","currentWeatherReducer","weeklyWeatherReducer","enhancers","compose","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a5bd8269.chunk.js","sourcesContent":["export const ADD_TO_FAVORITES = 'ADD_TO_FAVORITES';\r\nexport const DELETE_FROM_FAVORITES = 'DELETE_FROM_FAVORITES';\r\nexport const SET_CITY_NAME = 'SET_CITY_NAME';\r\nexport const SET_CURRENT_CITY = 'SET_CURRENT_CITY';\r\nexport const SET_AUTO_COMPLETE = 'SET_AUTO_COMPLETE';\r\nexport const SET_CURRENT_WEATHER = 'SET_CURRENT_WEATHER';\r\nexport const SET_ALL_WEATHER = 'SET_ALL_WEATHER';\r\nexport const DELETE_ALL_WEATHER = 'DELETE_ALL_WEATHER';\r\nexport const SET_WEEKLY_WEATHER = 'SET_WEEKLY_WEATHER';\r\nexport const SET_IS_C = 'SET_IS_C';\r\nexport const SET_API_ERROR = 'SET_API_ERROR';\r\n\r\nexport function addToFavorites(item) {\r\n  return { type: ADD_TO_FAVORITES, payload: item };\r\n}\r\n\r\nexport function deleteFromFavorites(key) {\r\n  return { type: DELETE_FROM_FAVORITES, payload: key };\r\n}\r\n\r\nexport function setCityName(item) {\r\n  return { type: SET_CITY_NAME, payload: item };\r\n}\r\n\r\nexport function setCurrentCity(item) {\r\n  return { type: SET_CURRENT_CITY, payload: item };\r\n}\r\n\r\nexport function setAutoComplete(items) {\r\n  return { type: SET_AUTO_COMPLETE, payload: items };\r\n}\r\n\r\nexport function setCurrentWeather(items) {\r\n  return { type: SET_CURRENT_WEATHER, payload: items };\r\n}\r\n\r\nexport function setAllWeather(items) {\r\n  return { type: SET_ALL_WEATHER, payload: items };\r\n}\r\nexport function deleteAllWeather() {\r\n  return { type: DELETE_ALL_WEATHER };\r\n}\r\n\r\nexport function setWeeklyWeather(items) {\r\n  return { type: SET_WEEKLY_WEATHER, payload: items };\r\n}\r\n\r\nexport function setIsC(items) {\r\n  return { type: SET_IS_C, payload: items };\r\n}\r\n\r\nexport function setApiError(items) {\r\n  return { type: SET_API_ERROR, payload: items };\r\n}\r\n","import React, { useRef } from 'react';\r\nimport { Input, Space } from 'antd';\r\nimport {\r\n  setApiError,\r\n  setAutoComplete,\r\n  setCityName,\r\n  setCurrentCity,\r\n} from '../../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport './searchInput.css';\r\n\r\nconst SearchInput = (props) => {\r\n  const { setCityName, autoComplete, setAutoComplete, setCurrentCity } = props;\r\n  const { Search } = Input;\r\n  const inputRef = useRef();\r\n\r\n  const onSearch = (value) => {\r\n    setCityName(value);\r\n    if (!value) {\r\n      return setAutoComplete([]);\r\n    }\r\n  };\r\n\r\n  const onUserChoice = (city) => {\r\n    setCurrentCity(city);\r\n    setAutoComplete([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='search-input-div margin'>\r\n        <Space direction='vertical'>\r\n          <Search\r\n            placeholder='search city'\r\n            allowClear\r\n            onSearch={onSearch}\r\n            style={{ width: 300 }}\r\n            ref={inputRef}\r\n            size='large'\r\n            enterButton\r\n          />\r\n        </Space>\r\n        <ul className='result-ul'>\r\n          {autoComplete?.map((city) => (\r\n            <li\r\n              key={city.Key}\r\n              className='result-li'\r\n              onClick={() => onUserChoice(city)}\r\n            >\r\n              {city.LocalizedName}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentCity: state.currentCity,\r\n    cityName: state.cityName,\r\n    autoComplete: state.autoComplete,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentCity: (city) => dispatch(setCurrentCity(city)),\r\n  setCityName: (city) => dispatch(setCityName(city)),\r\n  setAutoComplete: (autoComplete) => dispatch(setAutoComplete(autoComplete)),\r\n  setApiError: (bool) => dispatch(setApiError(bool)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { HeartFilled } from '@ant-design/icons';\r\nimport {\r\n  addToFavorites,\r\n  deleteFromFavorites,\r\n  setIsC,\r\n} from '../../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport './mainHeader.css';\r\n\r\nconst MainHeader = (props) => {\r\n  const {\r\n    addToList,\r\n    deleteFromList,\r\n    currentCity,\r\n    listFavorites,\r\n    currentWeather,\r\n    isC,\r\n  } = props;\r\n  const setInFavorites = useState(null)[1];\r\n\r\n  const addToFavorites = (city) => {\r\n    city['inFavorites'] = true;\r\n    addToList(city);\r\n    setInFavorites(city);\r\n  };\r\n\r\n  const deleteFromFavorites = (city) => {\r\n    city['inFavorites'] = false;\r\n    deleteFromList(city);\r\n    setInFavorites(null);\r\n  };\r\n  useEffect(() => {\r\n    setInFavorites(listFavorites?.find((city) => city.key === currentCity.Key));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentCity, listFavorites]);\r\n\r\n  return (\r\n    <>\r\n      <div className='main-header margin'>\r\n        <div className='card-container'>\r\n          <div className='widget'>\r\n            <div className='details'>\r\n              <div className='temperature'>\r\n                {isC\r\n                  ? Math.floor(currentWeather[0]?.Temperature.Metric.Value) +\r\n                    ' ' +\r\n                    currentWeather[0]?.Temperature.Metric.Unit\r\n                  : Math.floor(currentWeather[0]?.Temperature.Imperial.Value) +\r\n                    ' ' +\r\n                    currentWeather[0]?.Temperature.Imperial.Unit}\r\n              </div>\r\n              <div className='summary'>\r\n                <p className='summaryText'>{currentCity?.LocalizedName}</p>\r\n              </div>\r\n              <div className='precipitation'>\r\n                {currentWeather[0]?.WeatherText}\r\n              </div>\r\n              <div className='wind'>\r\n                Wind: {currentWeather[0]?.Wind?.Speed.Metric.Value}{' '}\r\n                {currentWeather[0]?.Wind?.Speed.Metric.Unit}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {currentCity.inFavorites ? (\r\n          <Button\r\n            className='favorite-btn'\r\n            style={{\r\n              fontSize: '21px',\r\n              marginTop: '42px',\r\n              padding: '7px 30px',\r\n            }}\r\n            type='primary'\r\n            shape='round'\r\n            icon={<HeartFilled style={{ color: 'red' }} />}\r\n            onClick={() => deleteFromFavorites(currentCity)}\r\n          >\r\n            remove from favorites\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className='favorite-btn'\r\n            style={{\r\n              fontSize: '21px',\r\n              marginTop: '42px',\r\n              padding: '7px 30px',\r\n            }}\r\n            type='primary'\r\n            shape='round'\r\n            icon={<HeartFilled style={{ color: 'white' }} />}\r\n            onClick={() => addToFavorites(currentCity)}\r\n          >\r\n            add to favorites\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favorites: state.favorites,\r\n    currentCity: state.currentCity,\r\n    autoComplete: state.autoComplete,\r\n    currentWeather: state.currentWeather,\r\n    weeklyWeather: state.weeklyWeather,\r\n    isC: state.isC,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addToList: (city) => dispatch(addToFavorites(city)),\r\n  deleteFromList: (key) => dispatch(deleteFromFavorites(key)),\r\n  setIsC: (status) => dispatch(setIsC(status)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHeader);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './weeklyWeather.css';\r\n\r\nconst WeeklyWeather = (props) => {\r\n  const { weeklyWeather, isC } = props;\r\n  return (\r\n    <>\r\n      <div\r\n        className='weather-of-the-week margin'\r\n        style={{ display: 'flex', flexWrap: 'wrap' }}\r\n      >\r\n        {weeklyWeather.DailyForecasts?.map((day, i) => {\r\n          let average = Math.floor(\r\n            (day.Temperature.Minimum.Value + day.Temperature.Maximum.Value) / 2\r\n          );\r\n          return (\r\n            <>\r\n              <div key={i} className='weather-wrapper'>\r\n                <div className='weather-card madrid'>\r\n                  <div\r\n                    className={`weather-icon ${average > 10 ? 'sun' : 'cloud'}`}\r\n                  ></div>\r\n                  <h1>\r\n                    {isC\r\n                      ? average + ' C'\r\n                      : Math.floor(average * 3.2034632) + ' F'}\r\n                  </h1>\r\n                  <p>{new Date(day.Date).toDateString()}</p>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    weeklyWeather: state.weeklyWeather,\r\n    currentCity: state.currentCity,\r\n    isC: state.isC,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WeeklyWeather);\r\n","import React from 'react';\r\nimport MainHeader from '../mainHeader/MainHeader';\r\nimport WeeklyWeather from '../weeklyWeather/WeeklyWeather';\r\n\r\nconst WeatherInfo = ({ theme }) => {\r\n  return (\r\n    <div>\r\n      <div className='container'>\r\n        <MainHeader />\r\n        <div className='weather-of-the-day margin'>\r\n          <h1\r\n            style={theme === 'dark' ? { color: 'white' } : { color: 'black' }}\r\n          >\r\n            The weather for the coming days\r\n          </h1>\r\n        </div>\r\n        <WeeklyWeather />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherInfo;\r\n","import React from 'react';\r\nimport SearchInput from '../features/searchInput/SearchInput';\r\nimport WeatherInfo from '../features/weatherInfo/WeatherInfo';\r\n\r\nconst HomePage = ({ theme }) => {\r\n  return (\r\n    <>\r\n      <SearchInput />\r\n      <WeatherInfo theme={theme} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  deleteAllWeather,\r\n  deleteFromFavorites,\r\n  setAllWeather,\r\n  setApiError,\r\n  setCurrentCity,\r\n} from '../../../redux/actions';\r\nimport './favoritesPage.css';\r\n\r\nconst FavoritesPage = (props) => {\r\n  const {\r\n    favorites,\r\n    allWeather,\r\n    isC,\r\n    setCurrentCity,\r\n    setAllWeather,\r\n    deleteAllWeather,\r\n    setApiError,\r\n  } = props;\r\n  useEffect(() => {\r\n    deleteAllWeather();\r\n    favorites.forEach((city) => {\r\n      fetch(\r\n        `https://dataservice.accuweather.com/currentconditions/v1/${city?.Key}?apikey=Vw78AAyCE30KZX7W8JRfAIYExiGy8ly9&q&language=en-us&details=true`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setAllWeather(data);\r\n        })\r\n        .catch(() => setApiError(true));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <>\r\n      {favorites.length > 0 ? (\r\n        <h1>favorites cities</h1>\r\n      ) : (\r\n        <h1>no favorites cities</h1>\r\n      )}\r\n      <div\r\n        className='favorites-container'\r\n        style={{ display: 'flex', flexWrap: 'wrap' }}\r\n      >\r\n        {favorites?.map((city, i) => {\r\n          return (\r\n            <>\r\n              <Link key={i} to='/'>\r\n                <div\r\n                  onClick={() => {\r\n                    setCurrentCity(city);\r\n                  }}\r\n                  className='favorites-card-container'\r\n                >\r\n                  <div className='favorites-widget'>\r\n                    <div className='favorites-details'>\r\n                      <div className='favorites-temperature'>\r\n                        {isC\r\n                          ? Math.floor(\r\n                              allWeather[i]?.Temperature.Metric.Value\r\n                            ) + allWeather[i]?.Temperature.Metric.Unit\r\n                          : Math.floor(\r\n                              allWeather[i]?.Temperature.Imperial.Value\r\n                            ) + allWeather[i]?.Temperature.Imperial.Unit}\r\n                        °\r\n                      </div>\r\n                      <div className='favorites-summary'>\r\n                        <p className='favorites-summaryText'>\r\n                          {city?.LocalizedName}\r\n                        </p>\r\n                      </div>\r\n                      <div className='favorites-precipitation'>\r\n                        {allWeather[i]?.WeatherText}\r\n                      </div>\r\n                      <div className='favorites-wind'>\r\n                        Wind: {allWeather[i]?.Wind?.Speed.Metric.Value}{' '}\r\n                        {allWeather[i]?.Wind?.Speed.Metric.Unit}\r\n                      </div>\r\n                    </div>\r\n                    <div className='favorites-pictoBackdrop'></div>\r\n                    <div className='favorites-pictoFrame'></div>\r\n                    <div className='favorites-pictoCloudBig'></div>\r\n                    <div className='favorites-pictoCloudFill'></div>\r\n                    <div className='favorites-pictoCloudSmall'></div>\r\n                    <div className='favorites-iconCloudBig'></div>\r\n                    <div className='favorites-iconCloudFill'></div>\r\n                    <div className='favorites-iconCloudSmall'></div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favorites: state.favorites,\r\n    allWeather: state.allWeather,\r\n    isC: state.isC,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentCity: (city) => dispatch(setCurrentCity(city)),\r\n  deleteFromList: (key) => dispatch(deleteFromFavorites(key)),\r\n  setAllWeather: (weather) => dispatch(setAllWeather(weather)),\r\n  deleteAllWeather: () => dispatch(deleteAllWeather()),\r\n  setApiError: (weather) => dispatch(setApiError(weather)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage);\r\n","import React from 'react';\r\nimport './Hamburger.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { setIsC } from '../../../redux/actions';\r\n\r\nfunction Hamburger(props) {\r\n  const { setTheme, theme, setIsC, isC } = props;\r\n  const openNav = () => {\r\n    document.getElementById('fullNav').style.height = '100%';\r\n  };\r\n\r\n  const closeNav = () => {\r\n    document.getElementById('fullNav').style.height = '0%';\r\n  };\r\n  return (\r\n    <>\r\n      <div id='fullNav' className='overlay'>\r\n        <span className='closebtn' onClick={() => closeNav()}>\r\n          &times;\r\n        </span>\r\n        <div className='overlay-content'>\r\n          <a\r\n            href='https://tech-career-alternative.firebaseapp.com/'\r\n            target='_blank'\r\n            rel='noreferrer'\r\n          >\r\n            <img\r\n              src='/frontfolio/images/tech-career-logo.png'\r\n              width='200px'\r\n              alt=''\r\n            />\r\n          </a>\r\n          <Link to='/' onClick={() => closeNav()}>\r\n            HOME\r\n          </Link>\r\n          <Link to='/favorites' onClick={() => closeNav()}>\r\n            FAVORITES\r\n          </Link>\r\n          <Button\r\n            key='1'\r\n            onClick={() => {\r\n              setTheme((old) => (old === 'dark' ? 'light' : 'dark'));\r\n              closeNav();\r\n            }}\r\n            style={\r\n              theme === 'dark'\r\n                ? { backgroundColor: 'white', color: 'black' }\r\n                : { backgroundColor: '#424242', color: 'white' }\r\n            }\r\n          >\r\n            {theme === 'dark' ? 'light mode' : 'dark mode'}\r\n          </Button>\r\n          <Button\r\n            key='2'\r\n            onClick={() => {\r\n              setIsC(!isC);\r\n              closeNav();\r\n            }}\r\n          >\r\n            {isC ? 'Fahrenheit' : 'Celsius'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <span\r\n        style={{ fontSize: '30px', cursor: 'pointer', color: '#1c47af' }}\r\n        onClick={() => openNav()}\r\n      >\r\n        &#9776;\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isC: state.isC,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setIsC: (status) => dispatch(setIsC(status)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hamburger);\r\n","import { Button, PageHeader } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { setIsC } from '../../../redux/actions';\r\nimport Hamburger from '../Hamburger/Hamburger';\r\n\r\nconst Navbar = (props) => {\r\n  const { pathname } = useLocation();\r\n  const [size, setSize] = useState(window.innerWidth);\r\n  const setForReRender = useState('.')[1];\r\n  const { isC, setIsC, theme, setTheme } = props;\r\n  const forReRenderFunc = () => {\r\n    setForReRender((oldValue) => (oldValue === '.' ? ',' : '.'));\r\n  };\r\n\r\n  const checkSize = () => {\r\n    setSize(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', checkSize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    forReRenderFunc();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      <nav className='navbar margin' style={{ backgroundColor: '#69c0ff' }}>\r\n        <PageHeader\r\n          style={{ backgroundColor: '#bae7ff' }}\r\n          ghost={false}\r\n          title='Herolo'\r\n          subTitle='Weather Task'\r\n          extra={\r\n            size > 460\r\n              ? [\r\n                  <Button\r\n                    key='1'\r\n                    onClick={() =>\r\n                      setTheme((old) => (old === 'dark' ? 'light' : 'dark'))\r\n                    }\r\n                    style={\r\n                      theme === 'dark'\r\n                        ? { backgroundColor: 'white', color: 'black' }\r\n                        : { backgroundColor: '#424242', color: 'white' }\r\n                    }\r\n                  >\r\n                    {theme === 'dark' ? 'light mode' : 'dark mode'}\r\n                  </Button>,\r\n                  <Button key='2' onClick={() => setIsC(!isC)}>\r\n                    {isC ? 'Fahrenheit' : 'Celsius'}\r\n                  </Button>,\r\n                  <Link to='/favorites'>\r\n                    <Button\r\n                      key='3'\r\n                      onClick={forReRenderFunc}\r\n                      type={\r\n                        document.location.href.indexOf('/favorites') > -1\r\n                          ? 'primary'\r\n                          : ''\r\n                      }\r\n                    >\r\n                      favorites\r\n                    </Button>{' '}\r\n                  </Link>,\r\n                  <Link to='/'>\r\n                    <Button\r\n                      key='4'\r\n                      onClick={forReRenderFunc}\r\n                      type={\r\n                        document.location.href.indexOf('/favorites') === -1\r\n                          ? 'primary'\r\n                          : ''\r\n                      }\r\n                    >\r\n                      home\r\n                    </Button>\r\n                  </Link>,\r\n                ]\r\n              : [<Hamburger setTheme={setTheme} theme={theme} />]\r\n          }\r\n        ></PageHeader>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isC: state.isC,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setIsC: (status) => dispatch(setIsC(status)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport HomePage from '../pages/HomePage';\r\nimport FavoritesPage from '../pages/favoritesPage/FavoritesPage';\r\nimport Navbar from '../features/navbar/Navbar';\r\nimport ScrollToTop from '../features/scrollToTop/ScrollToTop';\r\n\r\nconst AppRouter = () => {\r\n  let [theme, setTheme] = useState('light');\r\n\r\n  return (\r\n    <Router>\r\n      <ScrollToTop />\r\n      <div\r\n        className='App'\r\n        style={theme === 'dark' ? { backgroundColor: 'gray' } : null}\r\n      >\r\n        <Navbar theme={theme} setTheme={setTheme} />\r\n        <Switch>\r\n          <Route path='/' exact>\r\n            <HomePage theme={theme} />\r\n          </Route>\r\n          <Route path='/favorites'>\r\n            <FavoritesPage />\r\n          </Route>\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect } from 'react';\r\n\r\nconst useAutoComplete = (cityName, setAutoComplete, setApiError) => {\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=Vw78AAyCE30KZX7W8JRfAIYExiGy8ly9&q=${cityName}&language=en-us`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setAutoComplete(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cityName]);\r\n};\r\n\r\nexport default useAutoComplete;\r\n","import { useEffect } from 'react';\r\n\r\nconst useCurrWeather = (\r\n  cityKey,\r\n  setCurrWeather,\r\n  setAllWeather,\r\n  setApiError\r\n) => {\r\n  useEffect(() => {\r\n    if (cityKey) {\r\n      fetch(\r\n        `https://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=Vw78AAyCE30KZX7W8JRfAIYExiGy8ly9&q&language=en-us&details=true`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setCurrWeather(data);\r\n        })\r\n        .catch(() => setApiError(true));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cityKey]);\r\n};\r\n\r\nexport const getUserLocation = (setCurrentCity, setApiError) => {\r\n  const success = (position) => {\r\n    const latitude = position.coords.latitude;\r\n    const longitude = position.coords.longitude;\r\n\r\n    fetch(\r\n      `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=Vw78AAyCE30KZX7W8JRfAIYExiGy8ly9&q&q=${latitude}%2C${longitude}&language=en-us&details=true&toplevel=false`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCurrentCity(data);\r\n      })\r\n      .catch(() => setApiError(true));\r\n  };\r\n\r\n  const error = () => {\r\n    setCurrentCity({\r\n      Version: 1,\r\n      Key: '215854',\r\n      Type: 'City',\r\n      Rank: 31,\r\n      LocalizedName: 'Tel Aviv',\r\n    });\r\n  };\r\n\r\n  if (!navigator.geolocation) {\r\n  } else {\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n  }\r\n};\r\n\r\nexport default useCurrWeather;\r\n","import { useEffect } from 'react';\r\n\r\nconst useWeekWeather = (cityKey, setWeekData, setApiError) => {\r\n  useEffect(() => {\r\n    if (cityKey) {\r\n      fetch(\r\n        `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=Vw78AAyCE30KZX7W8JRfAIYExiGy8ly9&q&language=en-us&details=true&metric=true`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setWeekData(data);\r\n        })\r\n        .catch(() => setApiError(true));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cityKey, setWeekData]);\r\n};\r\n\r\nexport default useWeekWeather;\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport useAutoComplete from '../../customHooks/useAutoComplete';\r\nimport useCurrWeather, {\r\n  getUserLocation,\r\n} from '../../customHooks/useCurrWeather';\r\nimport useWeekWeather from '../../customHooks/useWeekWeather';\r\nimport {\r\n  setAllWeather,\r\n  setApiError,\r\n  setAutoComplete,\r\n  setCurrentCity,\r\n  setCurrentWeather,\r\n  setWeeklyWeather,\r\n} from '../../redux/actions';\r\n\r\nconst GetWeather = (props) => {\r\n  const {\r\n    currentCity,\r\n    cityName,\r\n    setAutoComplete,\r\n    setCurrentWeather,\r\n    setAllWeather,\r\n    setWeeklyWeather,\r\n    setCurrentCity,\r\n    setApiError,\r\n  } = props;\r\n\r\n  useAutoComplete(cityName, setAutoComplete, setApiError);\r\n  useCurrWeather(\r\n    currentCity?.Key,\r\n    setCurrentWeather,\r\n    setAllWeather,\r\n    setApiError\r\n  );\r\n  useWeekWeather(currentCity?.Key, setWeeklyWeather, setApiError);\r\n\r\n  useEffect(() => {\r\n    getUserLocation(setCurrentCity, setApiError);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return null;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentCity: state.currentCity,\r\n    cityName: state.cityName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentCity: (city) => dispatch(setCurrentCity(city)),\r\n  setAutoComplete: (autoComplete) => dispatch(setAutoComplete(autoComplete)),\r\n  setCurrentWeather: (currentWeather) =>\r\n    dispatch(setCurrentWeather(currentWeather)),\r\n  setAllWeather: (currentWeather) => dispatch(setAllWeather(currentWeather)),\r\n  setWeeklyWeather: (weeklyWeather) =>\r\n    dispatch(setWeeklyWeather(weeklyWeather)),\r\n  setApiError: (bool) => dispatch(setApiError(bool)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GetWeather);\r\n","import React from 'react';\r\nimport './errorPage.css';\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <>\r\n      <div className='Error-Container'>\r\n        <div className='MainGraphic'>\r\n          <svg\r\n            className='Hummingbird'\r\n            viewBox='0 0 55 41'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <path d='M35.5 5L54.7.6H32.3L35.5 5zM12.4 40.8l10.3-10.1-6.2-6.7-4.1 16.8zM33.8 5.3L30.5.8l-5.4 4 8.7.5zM20.8 4.6L8.8 0l1.9 4.1 10.1.5zM0 5l15.2 15.4 7.5-14.2L0 5zM34.2 6.8l-9.9-.5-8 15.2 7.4 8.1 8-7.9 2.5-14.9z' />\r\n          </svg>\r\n\r\n          <svg\r\n            className='Cog'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 32 32'\r\n          >\r\n            <path d='M29.18 19.07c-1.678-2.908-.668-6.634 2.256-8.328L28.29 5.295c-.897.527-1.942.83-3.057.83-3.36 0-6.085-2.743-6.085-6.126h-6.29c.01 1.043-.25 2.102-.81 3.07-1.68 2.907-5.41 3.896-8.34 2.21L.566 10.727c.905.515 1.69 1.268 2.246 2.234 1.677 2.904.673 6.624-2.24 8.32l3.145 5.447c.895-.522 1.935-.82 3.044-.82 3.35 0 6.066 2.725 6.083 6.092h6.29c-.004-1.035.258-2.08.81-3.04 1.676-2.902 5.4-3.893 8.325-2.218l3.145-5.447c-.9-.515-1.678-1.266-2.232-2.226zM16 22.48c-3.578 0-6.48-2.902-6.48-6.48S12.423 9.52 16 9.52c3.578 0 6.48 2.902 6.48 6.48s-2.902 6.48-6.48 6.48z' />\r\n          </svg>\r\n        </div>\r\n        <h1 className='MainTitle'>\r\n          The allowed number of requests per day has been exceeded.\r\n        </h1>\r\n        <p className='Main Description'>\r\n          if you want to see the weather around the world within this web you\r\n          can come back tomorrow ant it will work!\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import 'antd/dist/antd.css';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport AppRouter from './components/appRouter/AppRouter';\nimport GetWeather from './components/getWeather/GetWeather';\nimport ErrorPage from './components/pages/errorPage/ErrorPage';\n\nconst visitCount = () => {\n  fetch('https://api.countapi.xyz/update/weatherApp/yudaBayana/?amount=1');\n};\nvisitCount();\n\nconst App = (props) => {\n  return (\n    <>\n      <GetWeather />\n      {!props.apiError ? <AppRouter /> : <ErrorPage />}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    apiError: state.apiError,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { ADD_TO_FAVORITES, DELETE_FROM_FAVORITES } from '../actions';\r\n\r\nexport const favoritesInitialState = [];\r\n\r\nfunction favoritesReducer(state = favoritesInitialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TO_FAVORITES:\r\n      let alreadyIn = state.find((city) => city.Key === action.payload.Key);\r\n      return alreadyIn ? state : [...state, action.payload];\r\n    case DELETE_FROM_FAVORITES:\r\n      let indexCity = state.findIndex(\r\n        (city) => city.Key === action.payload.Key\r\n      );\r\n      state.splice(indexCity, 1);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default favoritesReducer;\r\n","import { SET_CURRENT_CITY } from '../actions';\r\n\r\nexport const currentCityInitialState = 'current city';\r\n\r\nfunction currentCityReducer(state = currentCityInitialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_CITY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default currentCityReducer;\r\n","import { SET_AUTO_COMPLETE } from '../actions';\r\n\r\nexport const autoCompleteInitialState = [];\r\n\r\nfunction currentCityReducer(state = autoCompleteInitialState, action) {\r\n  switch (action.type) {\r\n    case SET_AUTO_COMPLETE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default currentCityReducer;\r\n","import { SET_CURRENT_WEATHER } from '../actions';\r\n\r\nexport const currentWeatherInitialState = {};\r\n\r\nfunction currentCityReducer(state = currentWeatherInitialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_WEATHER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default currentCityReducer;\r\n","import { SET_WEEKLY_WEATHER } from '../actions';\r\n\r\nexport const weeklyWeatherInitialState = [];\r\n\r\nfunction currentCityReducer(state = weeklyWeatherInitialState, action) {\r\n  switch (action.type) {\r\n    case SET_WEEKLY_WEATHER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default currentCityReducer;\r\n","import { SET_ALL_WEATHER, DELETE_ALL_WEATHER } from '../actions';\r\n\r\nexport const allWeatherInitialState = [];\r\n\r\nfunction allWeatherReducer(state = allWeatherInitialState, action) {\r\n  switch (action.type) {\r\n    case SET_ALL_WEATHER:\r\n      return [...state, ...action.payload];\r\n    case DELETE_ALL_WEATHER:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default allWeatherReducer;\r\n","import { SET_IS_C } from '../actions';\r\n\r\nexport const isCInitialState = true;\r\n\r\nfunction isCReducer(state = isCInitialState, action) {\r\n  switch (action.type) {\r\n    case SET_IS_C:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default isCReducer;\r\n","import { SET_CITY_NAME } from '../actions';\r\n\r\nexport const cityNameInitialState = '';\r\n\r\nfunction cityNameReducer(state = cityNameInitialState, action) {\r\n  switch (action.type) {\r\n    case SET_CITY_NAME:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default cityNameReducer;\r\n","import { SET_API_ERROR } from '../actions';\r\n\r\nexport const apiErrorInitialState = false;\r\n\r\nfunction apiErrorReducer(state = apiErrorInitialState, action) {\r\n  switch (action.type) {\r\n    case SET_API_ERROR:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default apiErrorReducer;\r\n","import { combineReducers } from 'redux';\r\nimport favoritesReducer, { favoritesInitialState } from './favoritesReducer';\r\nimport currentCityReducer, {\r\n  currentCityInitialState,\r\n} from './currentCityReducer';\r\nimport autoCompleteReducer, {\r\n  autoCompleteInitialState,\r\n} from './autoCompleteReducer';\r\nimport currentWeatherReducer, {\r\n  currentWeatherInitialState,\r\n} from './currentWeatherReducer';\r\nimport weeklyWeatherReducer, {\r\n  weeklyWeatherInitialState,\r\n} from './weeklyWeatherReducer';\r\nimport allWeatherReducer, { allWeatherInitialState } from './allWeatherReducer';\r\nimport isCReducer, { isCInitialState } from './isCReducer';\r\nimport cityNameReducer, { cityNameInitialState } from './cityNameReducer';\r\nimport apiErrorReducer, { apiErrorInitialState } from './apiErrorReducer';\r\n\r\nexport const initialState = {\r\n  favorites: favoritesInitialState,\r\n  cityName: cityNameInitialState,\r\n  currentCity: currentCityInitialState,\r\n  autoComplete: autoCompleteInitialState,\r\n  currentWeather: currentWeatherInitialState,\r\n  allWeather: allWeatherInitialState,\r\n  weeklyWeather: weeklyWeatherInitialState,\r\n  isC: isCInitialState,\r\n  apiError: apiErrorInitialState,\r\n};\r\n\r\nexport default combineReducers({\r\n  favorites: favoritesReducer,\r\n  cityName: cityNameReducer,\r\n  currentCity: currentCityReducer,\r\n  autoComplete: autoCompleteReducer,\r\n  currentWeather: currentWeatherReducer,\r\n  allWeather: allWeatherReducer,\r\n  weeklyWeather: weeklyWeatherReducer,\r\n  isC: isCReducer,\r\n  apiError: apiErrorReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, compose } from 'redux';\nimport rootReducer, { initialState } from './redux/reducers';\nconst enhancers = compose(\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nconst store = createStore(rootReducer, initialState, enhancers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}